<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        l8u6DIJ3J1GQ+gOJUTj6I4DZIJlqJ0tMvmMFWXFMotv1FwVicuuvPGTDbaqdwBEI2teOo6Xb1CbCrb2W
        UdoHhfbn0I6jpXHrdv2r8cS+bLi11Fc8KLQ/hxjnVNWa6uWyLoPg3YmKNopVBTk6SFptQOi8Kvx2LKHi
        mCQmuibVdKU1WoSWxHkdjV1t9PV0pTVaG1qnwkT3YbTTz3F0uLXaB0KdVz/Ddiyhak31clmXQfDuTEXp
        imgLWgm4MUxVHJMm7ZZB0lr697rUZvSfdD9GoXIs3KYUzq6PLUTQzalYUz1c1mUQvDtRkMTqRP+Ofpra
        0iqjXXUcWwlUHJNEOwXd6KfOLQV7BInOdSpUYkyidls9KOhaYxWuc51ahSuYo53Gt+XqUrURtaJzHXtQ
        qFpTvVzWZRC8O1GBqFjaAh5dmNNCjL6PPV2tOCaZHjc6gKeBG33rnO04WrqtPU5GBvA0cNu+43xTMe72
        ON1nGuu0/7Xa2mj7jp/NlPZPj6tQU71c1mUQvDuJggzTwlTRZEQh6t/pxNPt7VhCxTFJ266dZAoXrQCn
        5+kRwdlO2PZc7Tha7fhdALtzLaVr0rW1DwLtuNpxtNQ22rgAjv7XilpwDzDxM5nS/rZdlZrq5bIug+Dd
        ybQggwozJkvWtBDDsYKsOCZx7dXP0tc85+jcx87h2ou7DoXRqKe36mcauMG1F3cdEcCufS8F5bEVfQTg
        VNWa6uWyLoPg3cmxgpRjRdzL9S3HCrLimMS1l1ET69jE7Q3euWN66Npc/+Lay5pjeqypj6o11ctlXQbB
        u5OKBVl1krj2MmpiEbzLrKmPqjXVy2VdBsG7k4oFWXWSuPYyamIRvMusqY+qNdXLZV0GwbuTigVZdZK4
        9jJqYhG8y6ypj6o11ctlXQbBu5OKBVl1krj2MmpiEbzLrKmPqjXVy2VdBsG7k4oFWXWSuPYyamIRvMus
        qY+qNdXLZV0GwbuTigVZdZK49jJqYhG8y6ypj6o11ctlXQbBu5OKBVl1krj2MmpiEbzLrKmPqjXVy2Vd
        BsG7k4oFWXWSuPYyamIRvMusqY+qNdXLZV0GwbuTigVZdZK49jJqYhG8y6ypj6o11ctlXQbBu5OKBVl1
        krj2MmpiEbzLrKmPqjXVy2VdBsG7k4oFWXWSuPYyamIRvMusqY+qNdXLZV0GwbuTigVZdZK49jJqYhG8
        y6ypj6o11ctlXQbBu5OKBVl1krj2MmpiEbzLrKmPqjXVy2VdBsG7k4oFWXWSuPYyamIRvMusqY+qNdXL
        ZV0GwbsT/S5S/W2vabEs/XtfS+gXVvf0X3FMMv0F5aLfMzvq9/Gqn+nvvp3r312HaL9r3+vYz+JU/+46
        RPefa7+G+1mc6r9qTfVyWZdB8O5oWpRRLMcmUI+YDG1RLinGimOSdsJHKE7Huoa7vujfjaM1nfARii6c
        ehy7vuj/lOnPyd3na7nri/5PmV6Hu8/XctcX/U/HkeGyLoPg3VkU5chiDG1R9hRjxTGJjj0WShntdeov
        LOhfd34nJrwLpYzpdUb/S8TPy4VSVnud0f8ScR3tfV2hppZyWZdB8BagQpFTf+5lrSjK3mKsOCbRn5/R
        pNUEc32vFRN27Zh03Og/9d6GrzvvKfF3zU697ruWAm7NmOL+rVZTS7isyyB4C1HxuKLKyK4AKo5p5Aou
        RMi58y0xcgXXihXmGrqPRz9ASYTcWhVrao7LugyCt5iRRTmqGCuOaWT4ZkM3jA7fTOiG0eGbDd1QsaZO
        cVmXQfAWNKIoR4VJqDimUeE7IuDCqPAdFXAyKnxHB1zFmjrGZV0GwVvU8zeeu3x9bq0tirHimPR6oTvX
        Ujre9Zuh63TnWkr3s+s3Q4HpztVji1VlxZpyXNZlELwAMMNlXQbBCwAzXNZlELwAMMNlXQbBCwAzXNZl
        ELwAMMNlXQbBCwAzXNZlELwAMMNlXQbBCwAzXNZlELwAMMNlXQbBCwAzXNZlELwAMMNlXQbBCwAzXNZl
        ELwAMMNlXQbBCwAzXNZlELwAMMNlXcbw4H36+S/ZgQPAOVKmuazLGB68Tz37BTt4ADhHyjSXdRnDg/fx
        px63gweAc6RMc1mXMTx4H3rsYTt4ADhHyjSXdRnDg/feBz5gBw8A5+i+B37bZl3G8OB957vvvvji15+0
        FwAA50Sv7yrTXNZlDA9eefCRj9iLAIBzoixzGZe1SfDe9b73Xzz5DJ9uAHC+tNpVlrmMy9okeOX+Dz1g
        LwYAzsH9H/6gzbYRNgteeeiTH7MXBACVKbtcpo2yafC+/a73Xjz6mU/YCwOAipRZyi6XaaNsGryiC/jo
        px6xFwgAlSirtg5d2Tx4g14v4Q03ABUpm7Z8TXfqyoJX9A7hg7/3O3zOF0AJyiJl0lafXjjmSoM3vONd
        d1/+Dzf9V7zf/+Ljl482f/wCv9UMwHaUMcoaZY6yRxm0xX+OWGKX4AWANzOCFwCuGMELAFeM4AWAK0bw
        AsAVI3gB4IopeF+f7gQAbOZ1Be/NyU4AwHZuKnhvTHYCALZzQ8H72clOAMB2nlDw3jPZCQDYzm8peO88
        +PdmJwBgG3pP7U4Fr3z8VzsBANtR1t4Rwfu2g58fuIYAgDytdpW1t4JX7j1wjQEAefcdXOZtG7zyuQN3
        AABgPWXrraxtQ1fecvDMgTsQANBPmapsvZW1begGNfj8gesAALCcsvS20JXbvpnQ6xG84QYA/ZSdt17T
        nbI7G3oH7tEDPucLAPOUlcrMy08vHGN3Gm890P9w038vfu1Aaf7GgTsxALwZKAOVhcpEZaMyUv8hzWVo
        4z13/BIgYh2scYNUmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>